<?php
/**
 * Order
 *
 * PHP version 5
 *
 * @category Class
 * @package  Listae\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * listae API 2.0
 *
 * DocumentaciÃ³n de los servicios REST de listae
 *
 * OpenAPI spec version: 2.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.23
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Listae\Client\Model;

use \ArrayAccess;
use \Listae\Client\ObjectSerializer;

/**
 * Order Class Doc Comment
 *
 * @category Class
 * @package  Listae\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class Order implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Order';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'created' => '\DateTime',
'updated' => '\DateTime',
'order_type' => 'string',
'business' => 'string',
'delivery_price' => 'float',
'delivery_tax_value' => 'float',
'delivery_client_address_valid' => 'bool',
'delivery_client_address' => 'string',
'delivery_client_place_id' => 'string',
'delivery_client_latitude' => 'float',
'delivery_client_longitude' => 'float',
'delivery_client_route' => 'string',
'delivery_client_street_number' => 'string',
'delivery_client_locality' => 'string',
'delivery_client_postal_code' => 'string',
'fiscal_id' => 'string',
'tax_included' => 'bool',
'currency' => 'string',
'total_order' => 'float',
'total_order_lines_discount' => 'float',
'total_global_discount' => 'float',
'total_discount' => 'float',
'order_lines' => '\Listae\Client\Model\OrderLine[]',
'offers' => '\Listae\Client\Model\Offer[]'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'created' => 'date-time',
'updated' => 'date-time',
'order_type' => null,
'business' => null,
'delivery_price' => 'float',
'delivery_tax_value' => 'float',
'delivery_client_address_valid' => null,
'delivery_client_address' => null,
'delivery_client_place_id' => null,
'delivery_client_latitude' => 'float',
'delivery_client_longitude' => 'float',
'delivery_client_route' => null,
'delivery_client_street_number' => null,
'delivery_client_locality' => null,
'delivery_client_postal_code' => null,
'fiscal_id' => null,
'tax_included' => null,
'currency' => null,
'total_order' => 'float',
'total_order_lines_discount' => 'float',
'total_global_discount' => 'float',
'total_discount' => 'float',
'order_lines' => null,
'offers' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'created' => 'created',
'updated' => 'updated',
'order_type' => 'orderType',
'business' => 'business',
'delivery_price' => 'deliveryPrice',
'delivery_tax_value' => 'deliveryTaxValue',
'delivery_client_address_valid' => 'deliveryClientAddressValid',
'delivery_client_address' => 'deliveryClientAddress',
'delivery_client_place_id' => 'deliveryClientPlaceId',
'delivery_client_latitude' => 'deliveryClientLatitude',
'delivery_client_longitude' => 'deliveryClientLongitude',
'delivery_client_route' => 'deliveryClientRoute',
'delivery_client_street_number' => 'deliveryClientStreetNumber',
'delivery_client_locality' => 'deliveryClientLocality',
'delivery_client_postal_code' => 'deliveryClientPostalCode',
'fiscal_id' => 'fiscalId',
'tax_included' => 'taxIncluded',
'currency' => 'currency',
'total_order' => 'totalOrder',
'total_order_lines_discount' => 'totalOrderLinesDiscount',
'total_global_discount' => 'totalGlobalDiscount',
'total_discount' => 'totalDiscount',
'order_lines' => 'orderLines',
'offers' => 'offers'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'created' => 'setCreated',
'updated' => 'setUpdated',
'order_type' => 'setOrderType',
'business' => 'setBusiness',
'delivery_price' => 'setDeliveryPrice',
'delivery_tax_value' => 'setDeliveryTaxValue',
'delivery_client_address_valid' => 'setDeliveryClientAddressValid',
'delivery_client_address' => 'setDeliveryClientAddress',
'delivery_client_place_id' => 'setDeliveryClientPlaceId',
'delivery_client_latitude' => 'setDeliveryClientLatitude',
'delivery_client_longitude' => 'setDeliveryClientLongitude',
'delivery_client_route' => 'setDeliveryClientRoute',
'delivery_client_street_number' => 'setDeliveryClientStreetNumber',
'delivery_client_locality' => 'setDeliveryClientLocality',
'delivery_client_postal_code' => 'setDeliveryClientPostalCode',
'fiscal_id' => 'setFiscalId',
'tax_included' => 'setTaxIncluded',
'currency' => 'setCurrency',
'total_order' => 'setTotalOrder',
'total_order_lines_discount' => 'setTotalOrderLinesDiscount',
'total_global_discount' => 'setTotalGlobalDiscount',
'total_discount' => 'setTotalDiscount',
'order_lines' => 'setOrderLines',
'offers' => 'setOffers'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'created' => 'getCreated',
'updated' => 'getUpdated',
'order_type' => 'getOrderType',
'business' => 'getBusiness',
'delivery_price' => 'getDeliveryPrice',
'delivery_tax_value' => 'getDeliveryTaxValue',
'delivery_client_address_valid' => 'getDeliveryClientAddressValid',
'delivery_client_address' => 'getDeliveryClientAddress',
'delivery_client_place_id' => 'getDeliveryClientPlaceId',
'delivery_client_latitude' => 'getDeliveryClientLatitude',
'delivery_client_longitude' => 'getDeliveryClientLongitude',
'delivery_client_route' => 'getDeliveryClientRoute',
'delivery_client_street_number' => 'getDeliveryClientStreetNumber',
'delivery_client_locality' => 'getDeliveryClientLocality',
'delivery_client_postal_code' => 'getDeliveryClientPostalCode',
'fiscal_id' => 'getFiscalId',
'tax_included' => 'getTaxIncluded',
'currency' => 'getCurrency',
'total_order' => 'getTotalOrder',
'total_order_lines_discount' => 'getTotalOrderLinesDiscount',
'total_global_discount' => 'getTotalGlobalDiscount',
'total_discount' => 'getTotalDiscount',
'order_lines' => 'getOrderLines',
'offers' => 'getOffers'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['created'] = isset($data['created']) ? $data['created'] : null;
        $this->container['updated'] = isset($data['updated']) ? $data['updated'] : null;
        $this->container['order_type'] = isset($data['order_type']) ? $data['order_type'] : null;
        $this->container['business'] = isset($data['business']) ? $data['business'] : null;
        $this->container['delivery_price'] = isset($data['delivery_price']) ? $data['delivery_price'] : null;
        $this->container['delivery_tax_value'] = isset($data['delivery_tax_value']) ? $data['delivery_tax_value'] : null;
        $this->container['delivery_client_address_valid'] = isset($data['delivery_client_address_valid']) ? $data['delivery_client_address_valid'] : null;
        $this->container['delivery_client_address'] = isset($data['delivery_client_address']) ? $data['delivery_client_address'] : null;
        $this->container['delivery_client_place_id'] = isset($data['delivery_client_place_id']) ? $data['delivery_client_place_id'] : null;
        $this->container['delivery_client_latitude'] = isset($data['delivery_client_latitude']) ? $data['delivery_client_latitude'] : null;
        $this->container['delivery_client_longitude'] = isset($data['delivery_client_longitude']) ? $data['delivery_client_longitude'] : null;
        $this->container['delivery_client_route'] = isset($data['delivery_client_route']) ? $data['delivery_client_route'] : null;
        $this->container['delivery_client_street_number'] = isset($data['delivery_client_street_number']) ? $data['delivery_client_street_number'] : null;
        $this->container['delivery_client_locality'] = isset($data['delivery_client_locality']) ? $data['delivery_client_locality'] : null;
        $this->container['delivery_client_postal_code'] = isset($data['delivery_client_postal_code']) ? $data['delivery_client_postal_code'] : null;
        $this->container['fiscal_id'] = isset($data['fiscal_id']) ? $data['fiscal_id'] : null;
        $this->container['tax_included'] = isset($data['tax_included']) ? $data['tax_included'] : null;
        $this->container['currency'] = isset($data['currency']) ? $data['currency'] : null;
        $this->container['total_order'] = isset($data['total_order']) ? $data['total_order'] : null;
        $this->container['total_order_lines_discount'] = isset($data['total_order_lines_discount']) ? $data['total_order_lines_discount'] : null;
        $this->container['total_global_discount'] = isset($data['total_global_discount']) ? $data['total_global_discount'] : null;
        $this->container['total_discount'] = isset($data['total_discount']) ? $data['total_discount'] : null;
        $this->container['order_lines'] = isset($data['order_lines']) ? $data['order_lines'] : null;
        $this->container['offers'] = isset($data['offers']) ? $data['offers'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets created
     *
     * @return \DateTime
     */
    public function getCreated()
    {
        return $this->container['created'];
    }

    /**
     * Sets created
     *
     * @param \DateTime $created Fecha de inserciÃ³n/creaciÃ³n
     *
     * @return $this
     */
    public function setCreated($created)
    {
        $this->container['created'] = $created;

        return $this;
    }

    /**
     * Gets updated
     *
     * @return \DateTime
     */
    public function getUpdated()
    {
        return $this->container['updated'];
    }

    /**
     * Sets updated
     *
     * @param \DateTime $updated Fecha de Ãºltima actualizaciÃ³n
     *
     * @return $this
     */
    public function setUpdated($updated)
    {
        $this->container['updated'] = $updated;

        return $this;
    }

    /**
     * Gets order_type
     *
     * @return string
     */
    public function getOrderType()
    {
        return $this->container['order_type'];
    }

    /**
     * Sets order_type
     *
     * @param string $order_type Tipo de pedido (delivery, takeaway, booking...)
     *
     * @return $this
     */
    public function setOrderType($order_type)
    {
        $this->container['order_type'] = $order_type;

        return $this;
    }

    /**
     * Gets business
     *
     * @return string
     */
    public function getBusiness()
    {
        return $this->container['business'];
    }

    /**
     * Sets business
     *
     * @param string $business Identificador del negocio
     *
     * @return $this
     */
    public function setBusiness($business)
    {
        $this->container['business'] = $business;

        return $this;
    }

    /**
     * Gets delivery_price
     *
     * @return float
     */
    public function getDeliveryPrice()
    {
        return $this->container['delivery_price'];
    }

    /**
     * Sets delivery_price
     *
     * @param float $delivery_price Costes del envio (si fuera delivery)
     *
     * @return $this
     */
    public function setDeliveryPrice($delivery_price)
    {
        $this->container['delivery_price'] = $delivery_price;

        return $this;
    }

    /**
     * Gets delivery_tax_value
     *
     * @return float
     */
    public function getDeliveryTaxValue()
    {
        return $this->container['delivery_tax_value'];
    }

    /**
     * Sets delivery_tax_value
     *
     * @param float $delivery_tax_value Valor del impuesto aplicable a los costes de envio (si fuera delivery)
     *
     * @return $this
     */
    public function setDeliveryTaxValue($delivery_tax_value)
    {
        $this->container['delivery_tax_value'] = $delivery_tax_value;

        return $this;
    }

    /**
     * Gets delivery_client_address_valid
     *
     * @return bool
     */
    public function getDeliveryClientAddressValid()
    {
        return $this->container['delivery_client_address_valid'];
    }

    /**
     * Sets delivery_client_address_valid
     *
     * @param bool $delivery_client_address_valid Identifica si la direccion de reparto es valida
     *
     * @return $this
     */
    public function setDeliveryClientAddressValid($delivery_client_address_valid)
    {
        $this->container['delivery_client_address_valid'] = $delivery_client_address_valid;

        return $this;
    }

    /**
     * Gets delivery_client_address
     *
     * @return string
     */
    public function getDeliveryClientAddress()
    {
        return $this->container['delivery_client_address'];
    }

    /**
     * Sets delivery_client_address
     *
     * @param string $delivery_client_address Direccion de reparto
     *
     * @return $this
     */
    public function setDeliveryClientAddress($delivery_client_address)
    {
        $this->container['delivery_client_address'] = $delivery_client_address;

        return $this;
    }

    /**
     * Gets delivery_client_place_id
     *
     * @return string
     */
    public function getDeliveryClientPlaceId()
    {
        return $this->container['delivery_client_place_id'];
    }

    /**
     * Sets delivery_client_place_id
     *
     * @param string $delivery_client_place_id Google PlaceID de la direccion de reparto
     *
     * @return $this
     */
    public function setDeliveryClientPlaceId($delivery_client_place_id)
    {
        $this->container['delivery_client_place_id'] = $delivery_client_place_id;

        return $this;
    }

    /**
     * Gets delivery_client_latitude
     *
     * @return float
     */
    public function getDeliveryClientLatitude()
    {
        return $this->container['delivery_client_latitude'];
    }

    /**
     * Sets delivery_client_latitude
     *
     * @param float $delivery_client_latitude Latitud de direccion de reparto
     *
     * @return $this
     */
    public function setDeliveryClientLatitude($delivery_client_latitude)
    {
        $this->container['delivery_client_latitude'] = $delivery_client_latitude;

        return $this;
    }

    /**
     * Gets delivery_client_longitude
     *
     * @return float
     */
    public function getDeliveryClientLongitude()
    {
        return $this->container['delivery_client_longitude'];
    }

    /**
     * Sets delivery_client_longitude
     *
     * @param float $delivery_client_longitude Longitud de direccion de reparto
     *
     * @return $this
     */
    public function setDeliveryClientLongitude($delivery_client_longitude)
    {
        $this->container['delivery_client_longitude'] = $delivery_client_longitude;

        return $this;
    }

    /**
     * Gets delivery_client_route
     *
     * @return string
     */
    public function getDeliveryClientRoute()
    {
        return $this->container['delivery_client_route'];
    }

    /**
     * Sets delivery_client_route
     *
     * @param string $delivery_client_route Calle/Carretera de la direccion de reparto
     *
     * @return $this
     */
    public function setDeliveryClientRoute($delivery_client_route)
    {
        $this->container['delivery_client_route'] = $delivery_client_route;

        return $this;
    }

    /**
     * Gets delivery_client_street_number
     *
     * @return string
     */
    public function getDeliveryClientStreetNumber()
    {
        return $this->container['delivery_client_street_number'];
    }

    /**
     * Sets delivery_client_street_number
     *
     * @param string $delivery_client_street_number Numero de la Calle/Km de la carretera de la direccion de reparto
     *
     * @return $this
     */
    public function setDeliveryClientStreetNumber($delivery_client_street_number)
    {
        $this->container['delivery_client_street_number'] = $delivery_client_street_number;

        return $this;
    }

    /**
     * Gets delivery_client_locality
     *
     * @return string
     */
    public function getDeliveryClientLocality()
    {
        return $this->container['delivery_client_locality'];
    }

    /**
     * Sets delivery_client_locality
     *
     * @param string $delivery_client_locality Localidad de la direccion de reparto
     *
     * @return $this
     */
    public function setDeliveryClientLocality($delivery_client_locality)
    {
        $this->container['delivery_client_locality'] = $delivery_client_locality;

        return $this;
    }

    /**
     * Gets delivery_client_postal_code
     *
     * @return string
     */
    public function getDeliveryClientPostalCode()
    {
        return $this->container['delivery_client_postal_code'];
    }

    /**
     * Sets delivery_client_postal_code
     *
     * @param string $delivery_client_postal_code Codigo Postal de la direccion de reparto
     *
     * @return $this
     */
    public function setDeliveryClientPostalCode($delivery_client_postal_code)
    {
        $this->container['delivery_client_postal_code'] = $delivery_client_postal_code;

        return $this;
    }

    /**
     * Gets fiscal_id
     *
     * @return string
     */
    public function getFiscalId()
    {
        return $this->container['fiscal_id'];
    }

    /**
     * Sets fiscal_id
     *
     * @param string $fiscal_id Identificador fiscal de la empresa
     *
     * @return $this
     */
    public function setFiscalId($fiscal_id)
    {
        $this->container['fiscal_id'] = $fiscal_id;

        return $this;
    }

    /**
     * Gets tax_included
     *
     * @return bool
     */
    public function getTaxIncluded()
    {
        return $this->container['tax_included'];
    }

    /**
     * Sets tax_included
     *
     * @param bool $tax_included Identifica si el precio tiene impuestos incluidos
     *
     * @return $this
     */
    public function setTaxIncluded($tax_included)
    {
        $this->container['tax_included'] = $tax_included;

        return $this;
    }

    /**
     * Gets currency
     *
     * @return string
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     *
     * @param string $currency Moneda usada en el pedido
     *
     * @return $this
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets total_order
     *
     * @return float
     */
    public function getTotalOrder()
    {
        return $this->container['total_order'];
    }

    /**
     * Sets total_order
     *
     * @param float $total_order Valor total del pedido (sin descuentos)
     *
     * @return $this
     */
    public function setTotalOrder($total_order)
    {
        $this->container['total_order'] = $total_order;

        return $this;
    }

    /**
     * Gets total_order_lines_discount
     *
     * @return float
     */
    public function getTotalOrderLinesDiscount()
    {
        return $this->container['total_order_lines_discount'];
    }

    /**
     * Sets total_order_lines_discount
     *
     * @param float $total_order_lines_discount Valor total de descuentos en las lineas de pedidos (positivo)
     *
     * @return $this
     */
    public function setTotalOrderLinesDiscount($total_order_lines_discount)
    {
        $this->container['total_order_lines_discount'] = $total_order_lines_discount;

        return $this;
    }

    /**
     * Gets total_global_discount
     *
     * @return float
     */
    public function getTotalGlobalDiscount()
    {
        return $this->container['total_global_discount'];
    }

    /**
     * Sets total_global_discount
     *
     * @param float $total_global_discount Valor total de descuentos globales (positivo)
     *
     * @return $this
     */
    public function setTotalGlobalDiscount($total_global_discount)
    {
        $this->container['total_global_discount'] = $total_global_discount;

        return $this;
    }

    /**
     * Gets total_discount
     *
     * @return float
     */
    public function getTotalDiscount()
    {
        return $this->container['total_discount'];
    }

    /**
     * Sets total_discount
     *
     * @param float $total_discount Valor total del descuento (positivo suma de los anteriores 2)
     *
     * @return $this
     */
    public function setTotalDiscount($total_discount)
    {
        $this->container['total_discount'] = $total_discount;

        return $this;
    }

    /**
     * Gets order_lines
     *
     * @return \Listae\Client\Model\OrderLine[]
     */
    public function getOrderLines()
    {
        return $this->container['order_lines'];
    }

    /**
     * Sets order_lines
     *
     * @param \Listae\Client\Model\OrderLine[] $order_lines Lista del pedido
     *
     * @return $this
     */
    public function setOrderLines($order_lines)
    {
        $this->container['order_lines'] = $order_lines;

        return $this;
    }

    /**
     * Gets offers
     *
     * @return \Listae\Client\Model\Offer[]
     */
    public function getOffers()
    {
        return $this->container['offers'];
    }

    /**
     * Sets offers
     *
     * @param \Listae\Client\Model\Offer[] $offers Lista del ofertas agregadas al pedido
     *
     * @return $this
     */
    public function setOffers($offers)
    {
        $this->container['offers'] = $offers;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
