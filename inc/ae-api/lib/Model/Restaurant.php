<?php
/**
 * Restaurant
 *
 * PHP version 5
 *
 * @category Class
 * @package  Listae\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * listae API 2.0
 *
 * DocumentaciÃ³n de los servicios REST de listae
 *
 * OpenAPI spec version: 2.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.23
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Listae\Client\Model;

use \ArrayAccess;
use \Listae\Client\ObjectSerializer;

/**
 * Restaurant Class Doc Comment
 *
 * @category Class
 * @package  Listae\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class Restaurant implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Restaurant';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'url' => 'string',
'created' => '\DateTime',
'updated' => '\DateTime',
'name' => 'string',
'categories' => '\Listae\Client\Model\Categories',
'tags' => '\Listae\Client\Model\Tags',
'posts' => '\Listae\Client\Model\PaginationPostList',
'stats' => '\Listae\Client\Model\Stats',
'reviews' => '\Listae\Client\Model\PaginationReviewList',
'description' => '\Listae\Client\Model\Text[]',
'main_contact' => '\Listae\Client\Model\PublicContactInfo',
'content_stats' => '\Listae\Client\Model\ContentStats',
'images' => '\Listae\Client\Model\LinkList',
'logo' => '\Listae\Client\Model\Link',
'featured_image' => '\Listae\Client\Model\Link',
'website' => '\Listae\Client\Model\Link',
'phone' => '\Listae\Client\Model\Phone',
'links' => '\Listae\Client\Model\LinkList',
'social' => '\Listae\Client\Model\LinkList',
'videos' => '\Listae\Client\Model\LinkList',
'cartes' => '\Listae\Client\Model\CarteCatalogs',
'menus' => '\Listae\Client\Model\MenuCatalogs',
'coupons' => '\Listae\Client\Model\CouponList',
'email_contact_enabled' => 'bool',
'average_price' => 'float',
'currency' => 'string',
'closed' => 'bool',
'main_map_link' => 'string',
'alt_booking_link' => 'string',
'alt_catalog_link' => 'string',
'specialty' => '\Listae\Client\Model\Text[]',
'other_service' => '\Listae\Client\Model\Text[]',
'live_show_comment' => '\Listae\Client\Model\Text[]',
'area_in_order' => '\Listae\Client\Model\Text[]',
'rate' => '\Listae\Client\Model\RestaurantRate',
'conclused_parking' => '\Listae\Client\Model\GeoPosition',
'dining_areas' => '\Listae\Client\Model\DiningAreasInfo',
'agendas' => '\Listae\Client\Model\RestaurantAgendas',
'vip_club_name' => 'string'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'url' => null,
'created' => 'date-time',
'updated' => 'date-time',
'name' => null,
'categories' => null,
'tags' => null,
'posts' => null,
'stats' => null,
'reviews' => null,
'description' => null,
'main_contact' => null,
'content_stats' => null,
'images' => null,
'logo' => null,
'featured_image' => null,
'website' => null,
'phone' => null,
'links' => null,
'social' => null,
'videos' => null,
'cartes' => null,
'menus' => null,
'coupons' => null,
'email_contact_enabled' => null,
'average_price' => 'float',
'currency' => null,
'closed' => null,
'main_map_link' => null,
'alt_booking_link' => null,
'alt_catalog_link' => null,
'specialty' => null,
'other_service' => null,
'live_show_comment' => null,
'area_in_order' => null,
'rate' => null,
'conclused_parking' => null,
'dining_areas' => null,
'agendas' => null,
'vip_club_name' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'url' => 'url',
'created' => 'created',
'updated' => 'updated',
'name' => 'name',
'categories' => 'categories',
'tags' => 'tags',
'posts' => 'posts',
'stats' => 'stats',
'reviews' => 'reviews',
'description' => 'description',
'main_contact' => 'mainContact',
'content_stats' => 'contentStats',
'images' => 'images',
'logo' => 'logo',
'featured_image' => 'featuredImage',
'website' => 'website',
'phone' => 'phone',
'links' => 'links',
'social' => 'social',
'videos' => 'videos',
'cartes' => 'cartes',
'menus' => 'menus',
'coupons' => 'coupons',
'email_contact_enabled' => 'email-contact-enabled',
'average_price' => 'average-price',
'currency' => 'currency',
'closed' => 'closed',
'main_map_link' => 'mainMapLink',
'alt_booking_link' => 'altBookingLink',
'alt_catalog_link' => 'altCatalogLink',
'specialty' => 'specialty',
'other_service' => 'other-service',
'live_show_comment' => 'live-show-comment',
'area_in_order' => 'area-in-order',
'rate' => 'rate',
'conclused_parking' => 'conclused-parking',
'dining_areas' => 'dining-areas',
'agendas' => 'agendas',
'vip_club_name' => 'vip-club-name'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'url' => 'setUrl',
'created' => 'setCreated',
'updated' => 'setUpdated',
'name' => 'setName',
'categories' => 'setCategories',
'tags' => 'setTags',
'posts' => 'setPosts',
'stats' => 'setStats',
'reviews' => 'setReviews',
'description' => 'setDescription',
'main_contact' => 'setMainContact',
'content_stats' => 'setContentStats',
'images' => 'setImages',
'logo' => 'setLogo',
'featured_image' => 'setFeaturedImage',
'website' => 'setWebsite',
'phone' => 'setPhone',
'links' => 'setLinks',
'social' => 'setSocial',
'videos' => 'setVideos',
'cartes' => 'setCartes',
'menus' => 'setMenus',
'coupons' => 'setCoupons',
'email_contact_enabled' => 'setEmailContactEnabled',
'average_price' => 'setAveragePrice',
'currency' => 'setCurrency',
'closed' => 'setClosed',
'main_map_link' => 'setMainMapLink',
'alt_booking_link' => 'setAltBookingLink',
'alt_catalog_link' => 'setAltCatalogLink',
'specialty' => 'setSpecialty',
'other_service' => 'setOtherService',
'live_show_comment' => 'setLiveShowComment',
'area_in_order' => 'setAreaInOrder',
'rate' => 'setRate',
'conclused_parking' => 'setConclusedParking',
'dining_areas' => 'setDiningAreas',
'agendas' => 'setAgendas',
'vip_club_name' => 'setVipClubName'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'url' => 'getUrl',
'created' => 'getCreated',
'updated' => 'getUpdated',
'name' => 'getName',
'categories' => 'getCategories',
'tags' => 'getTags',
'posts' => 'getPosts',
'stats' => 'getStats',
'reviews' => 'getReviews',
'description' => 'getDescription',
'main_contact' => 'getMainContact',
'content_stats' => 'getContentStats',
'images' => 'getImages',
'logo' => 'getLogo',
'featured_image' => 'getFeaturedImage',
'website' => 'getWebsite',
'phone' => 'getPhone',
'links' => 'getLinks',
'social' => 'getSocial',
'videos' => 'getVideos',
'cartes' => 'getCartes',
'menus' => 'getMenus',
'coupons' => 'getCoupons',
'email_contact_enabled' => 'getEmailContactEnabled',
'average_price' => 'getAveragePrice',
'currency' => 'getCurrency',
'closed' => 'getClosed',
'main_map_link' => 'getMainMapLink',
'alt_booking_link' => 'getAltBookingLink',
'alt_catalog_link' => 'getAltCatalogLink',
'specialty' => 'getSpecialty',
'other_service' => 'getOtherService',
'live_show_comment' => 'getLiveShowComment',
'area_in_order' => 'getAreaInOrder',
'rate' => 'getRate',
'conclused_parking' => 'getConclusedParking',
'dining_areas' => 'getDiningAreas',
'agendas' => 'getAgendas',
'vip_club_name' => 'getVipClubName'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['url'] = isset($data['url']) ? $data['url'] : null;
        $this->container['created'] = isset($data['created']) ? $data['created'] : null;
        $this->container['updated'] = isset($data['updated']) ? $data['updated'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['categories'] = isset($data['categories']) ? $data['categories'] : null;
        $this->container['tags'] = isset($data['tags']) ? $data['tags'] : null;
        $this->container['posts'] = isset($data['posts']) ? $data['posts'] : null;
        $this->container['stats'] = isset($data['stats']) ? $data['stats'] : null;
        $this->container['reviews'] = isset($data['reviews']) ? $data['reviews'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['main_contact'] = isset($data['main_contact']) ? $data['main_contact'] : null;
        $this->container['content_stats'] = isset($data['content_stats']) ? $data['content_stats'] : null;
        $this->container['images'] = isset($data['images']) ? $data['images'] : null;
        $this->container['logo'] = isset($data['logo']) ? $data['logo'] : null;
        $this->container['featured_image'] = isset($data['featured_image']) ? $data['featured_image'] : null;
        $this->container['website'] = isset($data['website']) ? $data['website'] : null;
        $this->container['phone'] = isset($data['phone']) ? $data['phone'] : null;
        $this->container['links'] = isset($data['links']) ? $data['links'] : null;
        $this->container['social'] = isset($data['social']) ? $data['social'] : null;
        $this->container['videos'] = isset($data['videos']) ? $data['videos'] : null;
        $this->container['cartes'] = isset($data['cartes']) ? $data['cartes'] : null;
        $this->container['menus'] = isset($data['menus']) ? $data['menus'] : null;
        $this->container['coupons'] = isset($data['coupons']) ? $data['coupons'] : null;
        $this->container['email_contact_enabled'] = isset($data['email_contact_enabled']) ? $data['email_contact_enabled'] : null;
        $this->container['average_price'] = isset($data['average_price']) ? $data['average_price'] : null;
        $this->container['currency'] = isset($data['currency']) ? $data['currency'] : null;
        $this->container['closed'] = isset($data['closed']) ? $data['closed'] : null;
        $this->container['main_map_link'] = isset($data['main_map_link']) ? $data['main_map_link'] : null;
        $this->container['alt_booking_link'] = isset($data['alt_booking_link']) ? $data['alt_booking_link'] : null;
        $this->container['alt_catalog_link'] = isset($data['alt_catalog_link']) ? $data['alt_catalog_link'] : null;
        $this->container['specialty'] = isset($data['specialty']) ? $data['specialty'] : null;
        $this->container['other_service'] = isset($data['other_service']) ? $data['other_service'] : null;
        $this->container['live_show_comment'] = isset($data['live_show_comment']) ? $data['live_show_comment'] : null;
        $this->container['area_in_order'] = isset($data['area_in_order']) ? $data['area_in_order'] : null;
        $this->container['rate'] = isset($data['rate']) ? $data['rate'] : null;
        $this->container['conclused_parking'] = isset($data['conclused_parking']) ? $data['conclused_parking'] : null;
        $this->container['dining_areas'] = isset($data['dining_areas']) ? $data['dining_areas'] : null;
        $this->container['agendas'] = isset($data['agendas']) ? $data['agendas'] : null;
        $this->container['vip_club_name'] = isset($data['vip_club_name']) ? $data['vip_club_name'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets url
     *
     * @return string
     */
    public function getUrl()
    {
        return $this->container['url'];
    }

    /**
     * Sets url
     *
     * @param string $url Identificador Ãºnico segÃºn tipo en ae
     *
     * @return $this
     */
    public function setUrl($url)
    {
        $this->container['url'] = $url;

        return $this;
    }

    /**
     * Gets created
     *
     * @return \DateTime
     */
    public function getCreated()
    {
        return $this->container['created'];
    }

    /**
     * Sets created
     *
     * @param \DateTime $created Fecha de inserciÃ³n/creaciÃ³n
     *
     * @return $this
     */
    public function setCreated($created)
    {
        $this->container['created'] = $created;

        return $this;
    }

    /**
     * Gets updated
     *
     * @return \DateTime
     */
    public function getUpdated()
    {
        return $this->container['updated'];
    }

    /**
     * Sets updated
     *
     * @param \DateTime $updated Fecha de actualizaciÃ³n
     *
     * @return $this
     */
    public function setUpdated($updated)
    {
        $this->container['updated'] = $updated;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name Nombre del negocio
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets categories
     *
     * @return \Listae\Client\Model\Categories
     */
    public function getCategories()
    {
        return $this->container['categories'];
    }

    /**
     * Sets categories
     *
     * @param \Listae\Client\Model\Categories $categories categories
     *
     * @return $this
     */
    public function setCategories($categories)
    {
        $this->container['categories'] = $categories;

        return $this;
    }

    /**
     * Gets tags
     *
     * @return \Listae\Client\Model\Tags
     */
    public function getTags()
    {
        return $this->container['tags'];
    }

    /**
     * Sets tags
     *
     * @param \Listae\Client\Model\Tags $tags tags
     *
     * @return $this
     */
    public function setTags($tags)
    {
        $this->container['tags'] = $tags;

        return $this;
    }

    /**
     * Gets posts
     *
     * @return \Listae\Client\Model\PaginationPostList
     */
    public function getPosts()
    {
        return $this->container['posts'];
    }

    /**
     * Sets posts
     *
     * @param \Listae\Client\Model\PaginationPostList $posts posts
     *
     * @return $this
     */
    public function setPosts($posts)
    {
        $this->container['posts'] = $posts;

        return $this;
    }

    /**
     * Gets stats
     *
     * @return \Listae\Client\Model\Stats
     */
    public function getStats()
    {
        return $this->container['stats'];
    }

    /**
     * Sets stats
     *
     * @param \Listae\Client\Model\Stats $stats stats
     *
     * @return $this
     */
    public function setStats($stats)
    {
        $this->container['stats'] = $stats;

        return $this;
    }

    /**
     * Gets reviews
     *
     * @return \Listae\Client\Model\PaginationReviewList
     */
    public function getReviews()
    {
        return $this->container['reviews'];
    }

    /**
     * Sets reviews
     *
     * @param \Listae\Client\Model\PaginationReviewList $reviews reviews
     *
     * @return $this
     */
    public function setReviews($reviews)
    {
        $this->container['reviews'] = $reviews;

        return $this;
    }

    /**
     * Gets description
     *
     * @return \Listae\Client\Model\Text[]
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param \Listae\Client\Model\Text[] $description Breve introducciÃ³n acerca del negocio
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets main_contact
     *
     * @return \Listae\Client\Model\PublicContactInfo
     */
    public function getMainContact()
    {
        return $this->container['main_contact'];
    }

    /**
     * Sets main_contact
     *
     * @param \Listae\Client\Model\PublicContactInfo $main_contact main_contact
     *
     * @return $this
     */
    public function setMainContact($main_contact)
    {
        $this->container['main_contact'] = $main_contact;

        return $this;
    }

    /**
     * Gets content_stats
     *
     * @return \Listae\Client\Model\ContentStats
     */
    public function getContentStats()
    {
        return $this->container['content_stats'];
    }

    /**
     * Sets content_stats
     *
     * @param \Listae\Client\Model\ContentStats $content_stats content_stats
     *
     * @return $this
     */
    public function setContentStats($content_stats)
    {
        $this->container['content_stats'] = $content_stats;

        return $this;
    }

    /**
     * Gets images
     *
     * @return \Listae\Client\Model\LinkList
     */
    public function getImages()
    {
        return $this->container['images'];
    }

    /**
     * Sets images
     *
     * @param \Listae\Client\Model\LinkList $images images
     *
     * @return $this
     */
    public function setImages($images)
    {
        $this->container['images'] = $images;

        return $this;
    }

    /**
     * Gets logo
     *
     * @return \Listae\Client\Model\Link
     */
    public function getLogo()
    {
        return $this->container['logo'];
    }

    /**
     * Sets logo
     *
     * @param \Listae\Client\Model\Link $logo logo
     *
     * @return $this
     */
    public function setLogo($logo)
    {
        $this->container['logo'] = $logo;

        return $this;
    }

    /**
     * Gets featured_image
     *
     * @return \Listae\Client\Model\Link
     */
    public function getFeaturedImage()
    {
        return $this->container['featured_image'];
    }

    /**
     * Sets featured_image
     *
     * @param \Listae\Client\Model\Link $featured_image featured_image
     *
     * @return $this
     */
    public function setFeaturedImage($featured_image)
    {
        $this->container['featured_image'] = $featured_image;

        return $this;
    }

    /**
     * Gets website
     *
     * @return \Listae\Client\Model\Link
     */
    public function getWebsite()
    {
        return $this->container['website'];
    }

    /**
     * Sets website
     *
     * @param \Listae\Client\Model\Link $website website
     *
     * @return $this
     */
    public function setWebsite($website)
    {
        $this->container['website'] = $website;

        return $this;
    }

    /**
     * Gets phone
     *
     * @return \Listae\Client\Model\Phone
     */
    public function getPhone()
    {
        return $this->container['phone'];
    }

    /**
     * Sets phone
     *
     * @param \Listae\Client\Model\Phone $phone phone
     *
     * @return $this
     */
    public function setPhone($phone)
    {
        $this->container['phone'] = $phone;

        return $this;
    }

    /**
     * Gets links
     *
     * @return \Listae\Client\Model\LinkList
     */
    public function getLinks()
    {
        return $this->container['links'];
    }

    /**
     * Sets links
     *
     * @param \Listae\Client\Model\LinkList $links links
     *
     * @return $this
     */
    public function setLinks($links)
    {
        $this->container['links'] = $links;

        return $this;
    }

    /**
     * Gets social
     *
     * @return \Listae\Client\Model\LinkList
     */
    public function getSocial()
    {
        return $this->container['social'];
    }

    /**
     * Sets social
     *
     * @param \Listae\Client\Model\LinkList $social social
     *
     * @return $this
     */
    public function setSocial($social)
    {
        $this->container['social'] = $social;

        return $this;
    }

    /**
     * Gets videos
     *
     * @return \Listae\Client\Model\LinkList
     */
    public function getVideos()
    {
        return $this->container['videos'];
    }

    /**
     * Sets videos
     *
     * @param \Listae\Client\Model\LinkList $videos videos
     *
     * @return $this
     */
    public function setVideos($videos)
    {
        $this->container['videos'] = $videos;

        return $this;
    }

    /**
     * Gets cartes
     *
     * @return \Listae\Client\Model\CarteCatalogs
     */
    public function getCartes()
    {
        return $this->container['cartes'];
    }

    /**
     * Sets cartes
     *
     * @param \Listae\Client\Model\CarteCatalogs $cartes cartes
     *
     * @return $this
     */
    public function setCartes($cartes)
    {
        $this->container['cartes'] = $cartes;

        return $this;
    }

    /**
     * Gets menus
     *
     * @return \Listae\Client\Model\MenuCatalogs
     */
    public function getMenus()
    {
        return $this->container['menus'];
    }

    /**
     * Sets menus
     *
     * @param \Listae\Client\Model\MenuCatalogs $menus menus
     *
     * @return $this
     */
    public function setMenus($menus)
    {
        $this->container['menus'] = $menus;

        return $this;
    }

    /**
     * Gets coupons
     *
     * @return \Listae\Client\Model\CouponList
     */
    public function getCoupons()
    {
        return $this->container['coupons'];
    }

    /**
     * Sets coupons
     *
     * @param \Listae\Client\Model\CouponList $coupons coupons
     *
     * @return $this
     */
    public function setCoupons($coupons)
    {
        $this->container['coupons'] = $coupons;

        return $this;
    }

    /**
     * Gets email_contact_enabled
     *
     * @return bool
     */
    public function getEmailContactEnabled()
    {
        return $this->container['email_contact_enabled'];
    }

    /**
     * Sets email_contact_enabled
     *
     * @param bool $email_contact_enabled Si esta cerrado este turno o no
     *
     * @return $this
     */
    public function setEmailContactEnabled($email_contact_enabled)
    {
        $this->container['email_contact_enabled'] = $email_contact_enabled;

        return $this;
    }

    /**
     * Gets average_price
     *
     * @return float
     */
    public function getAveragePrice()
    {
        return $this->container['average_price'];
    }

    /**
     * Sets average_price
     *
     * @param float $average_price Si esta cerrado este turno o no
     *
     * @return $this
     */
    public function setAveragePrice($average_price)
    {
        $this->container['average_price'] = $average_price;

        return $this;
    }

    /**
     * Gets currency
     *
     * @return string
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     *
     * @param string $currency CÃ³digo de moneda (EUR, USD...)
     *
     * @return $this
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets closed
     *
     * @return bool
     */
    public function getClosed()
    {
        return $this->container['closed'];
    }

    /**
     * Sets closed
     *
     * @param bool $closed Si esta cerrado indefinidamente o no
     *
     * @return $this
     */
    public function setClosed($closed)
    {
        $this->container['closed'] = $closed;

        return $this;
    }

    /**
     * Gets main_map_link
     *
     * @return string
     */
    public function getMainMapLink()
    {
        return $this->container['main_map_link'];
    }

    /**
     * Sets main_map_link
     *
     * @param string $main_map_link URL a mapa alternativo (normalmente google maps para poner con iframe)
     *
     * @return $this
     */
    public function setMainMapLink($main_map_link)
    {
        $this->container['main_map_link'] = $main_map_link;

        return $this;
    }

    /**
     * Gets alt_booking_link
     *
     * @return string
     */
    public function getAltBookingLink()
    {
        return $this->container['alt_booking_link'];
    }

    /**
     * Sets alt_booking_link
     *
     * @param string $alt_booking_link URL a reservas de terceros
     *
     * @return $this
     */
    public function setAltBookingLink($alt_booking_link)
    {
        $this->container['alt_booking_link'] = $alt_booking_link;

        return $this;
    }

    /**
     * Gets alt_catalog_link
     *
     * @return string
     */
    public function getAltCatalogLink()
    {
        return $this->container['alt_catalog_link'];
    }

    /**
     * Sets alt_catalog_link
     *
     * @param string $alt_catalog_link URL a catalogos de terceros
     *
     * @return $this
     */
    public function setAltCatalogLink($alt_catalog_link)
    {
        $this->container['alt_catalog_link'] = $alt_catalog_link;

        return $this;
    }

    /**
     * Gets specialty
     *
     * @return \Listae\Client\Model\Text[]
     */
    public function getSpecialty()
    {
        return $this->container['specialty'];
    }

    /**
     * Sets specialty
     *
     * @param \Listae\Client\Model\Text[] $specialty Breve descripcion acerca de la especialidad del negocio
     *
     * @return $this
     */
    public function setSpecialty($specialty)
    {
        $this->container['specialty'] = $specialty;

        return $this;
    }

    /**
     * Gets other_service
     *
     * @return \Listae\Client\Model\Text[]
     */
    public function getOtherService()
    {
        return $this->container['other_service'];
    }

    /**
     * Sets other_service
     *
     * @param \Listae\Client\Model\Text[] $other_service Breve descripcion acerca de otros servicios del negocio
     *
     * @return $this
     */
    public function setOtherService($other_service)
    {
        $this->container['other_service'] = $other_service;

        return $this;
    }

    /**
     * Gets live_show_comment
     *
     * @return \Listae\Client\Model\Text[]
     */
    public function getLiveShowComment()
    {
        return $this->container['live_show_comment'];
    }

    /**
     * Sets live_show_comment
     *
     * @param \Listae\Client\Model\Text[] $live_show_comment Breve descripcion acerca de espectÃ¡culos en vivo que se realizan en el negocio
     *
     * @return $this
     */
    public function setLiveShowComment($live_show_comment)
    {
        $this->container['live_show_comment'] = $live_show_comment;

        return $this;
    }

    /**
     * Gets area_in_order
     *
     * @return \Listae\Client\Model\Text[]
     */
    public function getAreaInOrder()
    {
        return $this->container['area_in_order'];
    }

    /**
     * Sets area_in_order
     *
     * @param \Listae\Client\Model\Text[] $area_in_order Breve descripciÃ³n acerca de las zonas de reparto del negocio
     *
     * @return $this
     */
    public function setAreaInOrder($area_in_order)
    {
        $this->container['area_in_order'] = $area_in_order;

        return $this;
    }

    /**
     * Gets rate
     *
     * @return \Listae\Client\Model\RestaurantRate
     */
    public function getRate()
    {
        return $this->container['rate'];
    }

    /**
     * Sets rate
     *
     * @param \Listae\Client\Model\RestaurantRate $rate rate
     *
     * @return $this
     */
    public function setRate($rate)
    {
        $this->container['rate'] = $rate;

        return $this;
    }

    /**
     * Gets conclused_parking
     *
     * @return \Listae\Client\Model\GeoPosition
     */
    public function getConclusedParking()
    {
        return $this->container['conclused_parking'];
    }

    /**
     * Sets conclused_parking
     *
     * @param \Listae\Client\Model\GeoPosition $conclused_parking conclused_parking
     *
     * @return $this
     */
    public function setConclusedParking($conclused_parking)
    {
        $this->container['conclused_parking'] = $conclused_parking;

        return $this;
    }

    /**
     * Gets dining_areas
     *
     * @return \Listae\Client\Model\DiningAreasInfo
     */
    public function getDiningAreas()
    {
        return $this->container['dining_areas'];
    }

    /**
     * Sets dining_areas
     *
     * @param \Listae\Client\Model\DiningAreasInfo $dining_areas dining_areas
     *
     * @return $this
     */
    public function setDiningAreas($dining_areas)
    {
        $this->container['dining_areas'] = $dining_areas;

        return $this;
    }

    /**
     * Gets agendas
     *
     * @return \Listae\Client\Model\RestaurantAgendas
     */
    public function getAgendas()
    {
        return $this->container['agendas'];
    }

    /**
     * Sets agendas
     *
     * @param \Listae\Client\Model\RestaurantAgendas $agendas agendas
     *
     * @return $this
     */
    public function setAgendas($agendas)
    {
        $this->container['agendas'] = $agendas;

        return $this;
    }

    /**
     * Gets vip_club_name
     *
     * @return string
     */
    public function getVipClubName()
    {
        return $this->container['vip_club_name'];
    }

    /**
     * Sets vip_club_name
     *
     * @param string $vip_club_name Nombre del club VIP del negocio (si lo tiene)
     *
     * @return $this
     */
    public function setVipClubName($vip_club_name)
    {
        $this->container['vip_club_name'] = $vip_club_name;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
